function wave_init(gameUuid: text):
  wave_start(1)
  wave_listener({_gameUuid})

function wave_listener(gameUuid: text):
  game_store_wave_set_current_timer(0)
  set {_waveNumber} to game_store_wave_get_current()
  set {_waveDuration} to game_store_wave_get_current_duration()
  while game_store_get({_gameUuid}, "STATUS") is "RUNNING":
    set {_waveTimer} to game_store_wave_get_current_timer()
    wave_tablist({_waveNumber}, {_waveDuration}, {_waveTimer})
    game_store_wave_set_current_timer({_waveTimer} + 40)
    # If no mobs anymore
    if mob_count() is 0:
      wave_next({_gameUuid})
    # If timer, go to next wave
    if {_waveTimer} >= {_waveDuration}:
      wave_next({_gameUuid})
      set {_waveNumber} to game_store_wave_get_current()
      set {_waveDuration} to game_store_wave_get_current_duration()
    wait 2 seconds

function wave_tablist(waveNumber: number, waveDuration: number, waveTimer: number):
  set {_waveNumber} to game_store_wave_get_current()
  set {_waveDuration} to game_store_wave_get_current_duration()
  set {_waveTimer} to game_store_wave_get_current_timer()
  loop all players:
    set {_p} to loop-player
    set {_waveTxt} to i18n({_p}, "WAVE.TITLE")
    set tab list footer of {_p} to "%{_waveTxt}% %{_waveNumber}% - %min(100, ceil(({_waveTimer}/{_waveDuration})*100))%%%"

function wave_next(gameUuid: text):
  set {_waveNumber} to game_store_wave_get_current()
  set {_nextWave} to game_store_wave_set_next() #Go next wave
  if {_nextWave} is {_waveNumber}:
    if mob_count() is 0:
      broadcast "END OF GAME : No next wave AND NO MOBS"
      game_end({_gameUuid})
  else:
    wave_start({_nextWave})

function wave_start(waveNumber: number):
  game_store_wave_set_current({_waveNumber})
  game_store_wave_set_current_timer(0)
  load yaml "plugins/Skript/scripts/fort-lisa/config/waves/%{_waveNumber}%.yml" as "YAML-WAVE"
  loop node keys "MOBS" of "YAML-WAVE":
    set {_categoryId::*} to loop-key split at "-"
    set {_category} to first element of {_categoryId::*}
    set {_id} to 2nd element of {_categoryId::*}
    set {_amount} to yaml value "MOBS.%loop-key%.AMOUNT" from "YAML-WAVE"
    set {_locationType} to yaml value "MOBS.%loop-key%.LOCATION" from "YAML-WAVE"

    loop {_amount} times:
      set {_location} to random element of {LOCATION::SPAWN::%{_locationType}%::*}
      mob_summon({_category}, {_id}, {_location})
  unload YAML "YAML-WAVE"