function weapon_category_get(category: text) :: text:
    if {WEAPON::%{_category}%} is set:
        return {_category}
    else:
        error("WEAPON of category %{_category}% does not exist")

#Give a weapon to the player
function weapon_give(p: player, category: text, id: text):
    set {_weapon} to item_create({_p}, "WEAPON", {_category}, {_id})    
    player_store_weapon_give({_p}, {_weapon})


#Called when the player equips the weapon 
#   p : player
#   category : text The category of the weapon (staff, fan, claw...)
#   id: text The id of the weapon
#   slot: integer
function weapon_onEquip(p: player, weapon: item):
    broadcast "I am equiping a weapon"
    player_store_weapon_equip({_p}, {_weapon})

# #Called when left clicking with a weapon. 
function weapon_leftClick(p: player, weapon: item):
    set {_category} to item_get_tag({_weapon}, "CATEGORY")
    if {_category} is "STAFF":
        broadcast "fff"
        staff_leftClick({_p}, {_weapon})

# #Called when right clicking with a weapon. 
# function weapon_rightClick(p: player, category: text, id: text, slot: integer):
#     if {_category} is "staff":
#         staff_rightClick({_p}, {_id}, {_slot})
#     else if {_category} is "claw":
#         claw_rightClick({_p}, {_id}, {_slot})


# #Called when the player hit a block/entity with his weapon
# #   p : player
# #   category : text The category of the weapon (staff, fan, claw...)
# #   id: text The id of the weapon
# #   slot: integer
# #   location: location
# function weapon_hit(p: player, category: text, id: text, slot: integer, victim: object):
#     if {_category} is "staff":
#         staff_hit({_p}, {_id}, {_slot}, {_victim})
#     else if {_category} is "claw":
#         claw_hit({_p}, {_id}, {_slot}, {_victim})