function helmet_burning_heart_cast(p: player, skill: item):
  set {_attack} to player_stat_compute({_p}, {_skill}, "ATTACK")
  set {_knockback} to player_stat_compute({_p}, {_skill}, "KNOCKBACK")
  set {_effectAttack} to player_stat_compute({_p}, {_skill}, "EFFECT_ATTACK")
  set {_effectDuration} to player_stat_compute({_p}, {_skill}, "EFFECT_DURATION")
  set {_effectFrequency} to player_stat_compute({_p}, {_skill}, "EFFECT_FREQUENCY")
  set {_range} to player_stat_compute({_p}, {_skill}, "RANGE")
  set {_usageCount} to player_stat_compute({_p}, {_skill}, "USAGE_COUNT")
  set {_loc} to location of {_p}
  set {_uuid} to item_nbt_get_tag({_skill}, "UUID")

  if block at {_p} is not air:
    teleport {_p} 1 meter above {_p}

  entity_effect_immunity({_p}, "ALL", 20)
  set {_f} to 1
  if pitch of {_p} is between 20 and -20:
    set {_f} to 3

  set {_origin} to location of {_p}
  push {_p} forward with force {_f}
  wait 1 tick

  # We push player, and stop if hit an entity
  loop 20 times:
    loop target_radius({_p}, 1.5):
      set {_victim} to loop-entity
      set {_yaw} to yaw of {_p}
      set {_pitch} to pitch of {_p}
      stop loop
    if {_victim} is set:
      set {_loc} to location of {_victim} ~ normalized vector from {_victim} and {_p}
      set yaw of {_loc} to {_yaw}
      set pitch of {_loc} to {_pitch}
      teleport {_p} to {_loc}
      stop loop
    wait 1 tick

    # Check if push ended
    if distance between {_p} and {_origin} <= 0.3:
      stop loop
    set {_origin} to location of {_p}
    
  # We damage hit entity and ones in radius and push them
  if {_victim} is set:
    drawDot count 15, particle "flame", RGB 1, 1, 1, center location of {_victim}, rainbowMode true, visibleRange 32, pulseDelay 0, keepFor 1 ticks
    set {_victims::*} to target_radius({_victim}, 3)
    drawDot count 5, particle "flame", RGB 0.2, 1, 0.2, center {_victim}, rainbowMode true, visibleRange 32, pulseDelay 0, keepFor 20 ticks
    loop {_victims::*}:
      entity_effect_damage({_p}, loop-value, {_attack}, {_knockback})
      entity_effect_burn({_p}, loop-value, {_effectAttack}, {_effectDuration}, {_effectFrequency})