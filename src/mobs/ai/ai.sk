function mob_ai_init(mob: entity, ai: text):
  if {_ai} is "A":
    set {_nearestEntrance} to location_castle_nearest_entrance({_mob})
    mob_store_location_set({_mob}, ({_nearestEntrance}, {LOCATION::CASTLE::FOUNTAIN} and {LOCATION::CASTLE::ARTIFACT}))
    mob_store_listener_set({_mob}, ("TARGET_PLAYER_RADIUS_SOFT"))
    mob_ai_main_thread({_mob})

function mob_ai_main_thread(mob: entity):
  while {_mob} is alive:
    if mob_store_target_isset({_mob}) is false:
      if mob_store_location_get({_mob}) is set:
        mob_ai_targetLocation({_mob})
      else if mob_store_location_count({_mob}) is 0:
        mob_ai_target_findSomethingToDo({_mob})
    mob_ai_triggerListeners({_mob})
    wait 2 seconds

function mob_ai_triggerListeners(mob: entity):
  set {_disabledListeners::*} to mob_store_listener_get_all_disabled({_mob})
  loop {_disabledListeners::*}:
    mob_store_listener_enable({_mob}, loop-value)
    if loop-value is "TARGET_PLAYER_RADIUS_SOFT":
      mob_ai_listener_TARGET_PLAYER_RADIUS_SOFT({_mob})
    else if loop-value is "TARGET_ABANDON_TOO_FAR":
      mob_ai_listener_TARGET_ABANDON_TOO_FAR({_mob})
    else if loop-value is "IN_WATER":
      mob_ai_listener_IN_WATER({_mob})
    else:
      broadcast "LISTENER %loop-value% not implemented"





