command /admin [<text>] [<text>] [<text>] [<text>] [<text>] [<text>]:
  trigger:
    set {_success} to true
    set {_p} to event-player

    if arg-1 is "hmr":
      if arg-2 is "reset":
        manager_hotReload()

    else if arg-1 is "init":
      config_load(world of player)

    else if arg-1 is "player":
      if arg-2 is "stat":
        if arg-3 is "set":
          if arg-4 is set:
            player_store_stat_set({_p}, arg-4, arg-5 parsed as number)
        else if arg-3 is "get":
          set {_stat} to player_store_stat_get({_p}, arg-4)
          broadcast "%arg-4% %{_stat}%"
      else if arg-2 is "clean":
        player_clean(player)
      # else if arg-2 is "listener":
      #   if arg-3 is set:
      #     if arg-3 is "list":
      #       set {_all::*} to player_store_listener_get_all({_p})
      #       broadcast "%{_all::*}%"
      #     else:
      #       if arg-4 is "off":
      #         player_store_listener_remove(player, arg-3)
      #       else if arg-4 is "on":
      #         player_store_listener_add({_p}, arg-3)

    else if arg-1 is "weapon":
      set {_category} to arg-2
      set {_id} to arg-3
      set {_giftWillId} to arg-4
      if {_giftWillId} is set:
        set {_weapon} to weapon_create({_p}, {_category}, {_id})
        set {_gift} to gift_create({_p}, "WILL", {_giftWillId})
        set {_weapon} to gift_consecrate({_p}, {_gift}, {_weapon})
        give {_weapon} to {_p}
      else:
        item_give(player, "WEAPON", {_category}, {_id})

    else if arg-1 is "equipment":
      set {_category} to arg-2
      set {_id} to arg-3
      set {_giftWillId} to arg-4
      if {_giftWillId} is set:
        set {_equipment} to equipment_create({_p}, {_category}, {_id})
        set {_gift} to gift_create({_p}, "WILL", {_giftWillId})
        set {_equipment} to gift_consecrate({_p}, {_gift}, {_equipment})
        give {_equipment} to {_p}
      else:
        item_give(player, "EQUIPMENT", {_category}, {_id})

    else if arg-1 is "skill":
      set {_category} to arg-2
      set {_id} to arg-3
      item_give(player, "SKILL", {_category}, {_id})
    
    else if arg-1 is "gift":
      set {_category} to arg-2
      set {_id} to arg-3
      item_give(player, "GIFT", {_category}, {_id})

    else if arg-1 is "gui":
      set {_category} to arg-2
      set {_id} to arg-3
      gui_summon({_category}, {_id}, location of {_p})

    else if arg-1 is "settings":
      if arg-2 is "INGAME":
        if arg-3 is "true":
          player_store_setting_set({_p}, "INGAME", true)
        else:
          player_store_setting_set({_p}, "INGAME", false)

    else if arg-1 is "utility":
      if arg-2 is "gameStart":
        give 1 of item_utility_create({_p}, "GAME", "START") to {_p}

    else if arg-1 is "game":
      if arg-2 is "start":
        game_start(world of {_p})
      else:
        set {_gameUuid} to player_store_game_get({_p}, "UUID")
        game_end({_gameUuid})

    else if arg-1 is "wave":
      if arg-2 is "start":
        stop
        # wave_start(arg-3 parsed as number, "TOTO")

    else if arg-1 is "mob":
      if arg-2 is "summon":
        if arg-3 is set:
          if arg-4 is set:
            if arg-6 is not set:
              set {_level} to 1
            else:
              set {_level} to arg-6 parsed as number
            mob_summon(arg-4, {_level}, arg-5, location of player)
      else if arg-2 is "kill":
        loop all entities:
          if entity_nbt_get_tag(loop-value, "TYPE") is "MOB":
            kill loop-value

    else if arg-1 is "test":
      if arg-2 is "all":
        test_main(player)

      else if arg-2 is "items":
        if arg-3 is set:
          test_item_main_detail(player, arg-3)
        else:
          test_item_main(player)

      else if arg-2 is "i18n":
        test_i18n_main(player)

      else if arg-2 is "player":
        if arg-3 is "store":
          test_player_store(player)
        else if arg-3 is "stat":
          test_player_stat(player)
        else if arg-3 is "action":
          test_player_action(player)
        else:
          test_player_main(player)

      else if arg-2 is "mob":
        test_mob_main(player)

      else if arg-2 is "entity":
        if arg-3 is "store":
          test_entity_store(player)
        else if arg-3 is "nbt":
          test_entity_nbt(player)
        else if arg-3 is "effect":
          test_entity_effect(player)
        else:
          test_entity_main(player)

on tab complete of "/admin":
  set tab completions for position 1 to "init", "hmr", "player", "weapon", "equipment", "skill", "settings", "game", "gift", "gui", "wave", "mob", "utility" and "test"

  if tab arg-1 is "hmr":
    set tab completions for position 2 to "reset"

  else if tab arg-1 is "player":
    set tab completions for position 2 to "stat", "listener" and "clean"
    if tab arg-2 is "stat":
      set tab completions for position 3 to "get" and "set"
      if tab arg-3 is set:
        set tab completions for position 4 to {STAT::ALL::*}
    else if tab arg-2 is "listener":
      set tab completions for position 3 to {PLAYER::LISTENER::*}
      if tab arg-3 is set:
        set tab completions for position 4 to "on" and "off"

  else if tab arg-1 is "weapon":
    set tab completions for position 2 to {WEAPON::CATEGORY::*}
    if tab arg-2 is set:
      set {_weapons::*} to {WEAPON::%tab arg-2%::ID::*}
      remove "TEST" from {_weapons::*}
      set tab completions for position 3 to {_weapons::*}
    if tab arg-3 is set:
      set tab completions for position 4 to {GIFT::WILL::ID::*}
  
  else if tab arg-1 is "equipment":
    set tab completions for position 2 to {EQUIPMENT::CATEGORY::*}
    if tab arg-2 is set:
      set {_equipments::*} to {EQUIPMENT::%tab arg-2%::ID::*}
      remove "TEST" from {_equipments::*}
      set tab completions for position 3 to {_equipments::*}
      if tab arg-3 is set:
        set tab completions for position 4 to {GIFT::WILL::ID::*}
  
  else if tab arg-1 is "skill":
    set tab completions for position 2 to {SKILL::CATEGORY::*}
    if tab arg-2 is set:
      set {_skills::*} to {SKILL::%tab arg-2%::*}
      remove "TEST" from {_skills::*}
      set tab completions for position 3 to {_skills::*}

  else if tab arg-1 is "gift":
    set tab completions for position 2 to "MEMORY", "WILL" and "INTELLECT"
    if tab arg-2 is set:
      set {_id::*} to {GIFT::%tab arg-2%::ID::*}
      set tab completions for position 3 to {_id::*}

  else if tab arg-1 is "gui":
    set tab completions for position 2 to {GUI::CATEGORY::*}
    if tab arg-2 is set:
      set tab completions for position 3 to {GUI::%tab arg-2%::ID::*}
  
  else if tab arg-1 is "settings":
    set tab completions for position 2 to "INGAME"
    if tab arg-2 is "INGAME":
      set tab completions for position 3 to "true" and "false"

  else if tab arg-1 is "utility":
    set tab completions for position 2 to "gameStart"
  
  else if tab arg-1 is "game":
    set tab completions for position 2 to "start" and "stop"

  else if tab arg-1 is "wave":
    set tab completions for position 2 to "start"
  
  else if tab arg-1 is "mob":
    set tab completions for position 2 to "summon" and "kill"
    if tab arg-2 is "summon":
      set tab completions for position 3 to {MOB::CATEGORY::*}
      if tab arg-3 is set:
        set {_category} to tab arg-3
        set tab completions for position 4 to {MOB::%{_category}%::*}
        if tab arg-4 is set:
          set tab completions for position 5 to {MOB::IA::*}
  
  else if tab arg-1 is "test":
    set tab completions for position 2 to "items", "i18n", "player", "mob", "entity" and "all"
    if tab arg-2 is "items":
      set tab completions for position 3 to "weapon", "skill", "gift" and "item"
    else if tab arg-2 is "player":
      set tab completions for position 3 to "store", "action" and "stat"
    else if tab arg-2 is "entity":
      set tab completions for position 3 to "effect", "store" and "nbt"