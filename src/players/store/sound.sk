function player_store_sound_get(p: player) :: text:
    return {players::sound::%{_p}%}

function player_store_sound_set(p: player, category: text, id: text, volume: number = 0.5, loop: boolean = false):
    set {_sound} to {MUSIC::%{_category}%::%{_id}%::PATH}
    set {_duration} to {MUSIC::%{_category}%::%{_id}%::DURATION}
    player_store_sound_delete({_p})

    set {players::sound::%{_p}%} to {_sound}
    set {players::sound::%{_p}%::loop} to {_loop}
    set {players::sound::%{_p}%::volume} to {_volume}
    set {players::sound::%{_p}%::duration} to {_volume}

function player_storeSound_play(p: player, loop: boolean):
    set {_sound} to {players::sound::%{_p}%}
    set {_volume} to {players::sound::%{_p}%::volume}
    set {_duration} to {players::sound::%{_p}%::duration}
    play sound {_sound} with volume {_volume} to {_p}
    wait "%{_duration}% ticks" parsed as timespan
    if {_loop} is true:
        while player_store_sound_get({_p}) is {_sound}:
            play sound {_sound} with volume {_volume} to {_p}
            wait "%{_duration}% ticks" parsed as timespan

function player_store_sound_delete(p: player):
    set {_currentSound} to {players::sound::%{_p}%}
    stop sound {_currentSound} for {_p}
    delete {players::sound::%{_p}%}