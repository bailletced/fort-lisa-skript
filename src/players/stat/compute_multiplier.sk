function getPureStat(stat: text) :: text:
  if size of {_stat} split at "-" > 1:
    set {_spitted::*} to {_stat} split at "-"
    set {_pureStat} to {_spitted::1}
  else:
    set {_pureStat} to {_stat}
  if {_stat} contains "EFFECT":
    replace "EFFECT_" with "" in {_pureStat}
  return {_pureStat}

function player_stat_compute(p: player, source: object, stat: text) :: number:
  set {_playerStat} to 0
  set {_pureStat} to getPureStat({_stat})
  if {_source} is entity:
    set {_sourceStat} to entity_nbt_get_stat({_source}, {_stat})
  else:
    set {_sourceStat} to item_nbt_get_stat({_source}, {_stat})

  if player_store_stat_isset({_p}, {_pureStat}) is true:
    set {_playerStat} to player_store_stat_get({_p}, {_pureStat})
    if {_source} is entity:
      set {_multiplier} to entity_nbt_get_stat({_source}, "%{_stat}%_MULTIPLIER")
    else:
      set {_multiplier} to item_nbt_get_stat({_source}, "%{_stat}%_MULTIPLIER")

  if {_multiplier} is not set:
    set {_multiplier} to 1
  return {_sourceStat} + {_playerStat} * {_multiplier}