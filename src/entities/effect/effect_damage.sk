function entity_effect_damage(source: entity, target: entity, attack: number, knockback: number = 0): 
  if {_target} is a player:
    set {_defence} to player_store_stat_get({_target}, "DEFENCE")
  else:
    set {_defence} to entity_nbt_get_stat({_target}, "DEFENCE")

  if {_defence} is not set:
    set {_defence} to 0

  set {_attack} to max(0, {_attack} - {_defence})

  # Reduce damage if holding a defensive item
  if {_target} is a player:
    set {_item} to tool of {_target}
    if item_nbt_isset_stat({_item}, "DEFENCE_REDUCTION_FACING") is true:
      set {_blocking} to item_nbt_get_stat({_item}, "DEFENCE_REDUCTION_FACING")
      set {_attack} to effect_damage_block_facing({_mob}, {_target}, 40, {_attack}, {_blocking})

  # Reduce damage if holding a shield
  set {_shield} to offhand item of {_target}
  if item_nbt_get_tag({_shield}, "CATEGORY") is "SHIELD":
    set {_attack} to shield_damage_receive({_target}, {_shield}, {_attack})

  set {_targetHealth} to health of {_target}
  set {_duration} to entity_store_effect_get({_target}, "IMMUNITY_TRYNDAMERE", "duration")
  if entity_store_effect_isset({_target}, "IMMUNITY_TRYNDAMERE") is true:
    if {_targetHealth} - {_attack} <= 0:
      set {_attack} to 0
      set health of {_target} to 0.5
  
  damage {_target} by {_attack}

  if {_knockback} is not 0:
    set {_v} to normalized vector from {_source} to {_target}
    set {_knockbackResist} to entity_nbt_get_stat({_target}, "KNOCKBACK_RESISTANCE")
    push {_target} {_v} with force max(0, {_knockback}-{_knockbackResist})