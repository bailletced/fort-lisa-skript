# ADD : simply add value
# MULTIPLY : edit stat by applying a {_value} factor. Ex : 2 means entity's stat * 2
function entity_effect_stat(e: entity, stat: text, value: number, duration: number, type: text = "ADD"):
    broadcast "ADD STAT %{_e}%"
    player_store_stat_add({_e}, {_stat}, {_value})
    # wait "%{_duration}% tick" parsed as timespan
    wait 60 ticks
    broadcast "END OF ADD"
    player_store_stat_add({_e}, {_stat}, -1*{_value})

    # if {_stat} does not contain "_BUFF":
    #     set {_stat} to "%{_stat}%_BUFF"
    # set {_pureStat} to {_stat}
    # remove "_BUFF" from {_pureStat}

    # if {_e} is a player:
    #     set {_entityVal} to player_store_stat_get({_e}, {_pureStat})
    # else:
    #     set {_entityVal} to entity_nbt_get_stat({_e}, {_pureStat})

    # if {_type} is "MULTIPLY":
    #     set {_value} to {_entityVal} * {_value}

    # if {_e} is a player:
    #     player_store_stat_add({_e}, {_stat}, {_value})
    # else:
    #     entity_nbt_add_stat({_e}, {_stat}, {_value})
    
    # wait "%{_duration}% tick" parsed as timespan
    # if {_e} is a player:
    #     player_store_stat_add({_e}, {_stat}, {_value}*(-1))
    # else:
    #     entity_nbt_add_stat({_e}, {_stat}, {_value}*(-1))