function test_player_compute_multiplier(p: player):
  send "ยง5Testing player stat item" to the console
  it "Test player_stat_item":
    set {_item} to weapon_give({_p}, "STAFF", "TEST")
    set {_attackPlayer} to 10
    set {_attackItem} to 10
    set {_attackItemMultiplier} to 0.5
    set {_attack2Item} to 20
    set {_attack2ItemMultiplier} to 1
    player_store_stat_set({_p}, "ATTACK", {_attackPlayer})
    
    set {_item} to item_nbt_set_stat({_item}, "ATTACK", {_attackItem})
    set {_item} to item_nbt_set_stat({_item}, "ATTACK_MULTIPLIER", {_attackItemMultiplier})
    set {_item} to item_nbt_set_stat({_item}, "ATTACK-2", {_attack2Item})
    set {_item} to item_nbt_set_stat({_item}, "ATTACK-2_MULTIPLIER", {_attack2ItemMultiplier})

    set {_finalattack} to player_stat_item({_p}, {_item}, "ATTACK")
    set {_finalattack2} to player_stat_item({_p}, {_item}, "ATTACK-2")
    assert if {_finalattack} is {_attackItem} + {_attackItemMultiplier}*{_attackPlayer}  with message "ATTACK should be %{_attackItem} + {_attackItemMultiplier}*{_attackPlayer}%. Got %{_finalattack}%"
    assert if {_finalattack2} is {_attack2Item} + {_attack2ItemMultiplier}*{_attackPlayer}  with message "ATTACK-2 should be %{_attack2Item} + {_attack2ItemMultiplier}*{_attackPlayer}%. Got %{_finalattack2}%"