function test_players_store_skill(p: player):
  send "ยง5Testing player store skill" to the console 
  it "test skill give":
    clear inventory of {_p}
    player_store_skill_delete_all({_p})
    player_store_stat_set({_p}, "POWER", 10)

    set slot 0 of {_p} to stone
    set {_skill1} to skill_give({_p}, "MAGE", "TEST")
    set {_slot} to player_store_skill_slot({_p}, {_skill1})
    assert if {_slot} is 0 with message "skill should be given in slot 0. Got %{_slot}%"
    assert if slot 1 of {_p} is stone with message "slot 1 of player should be stone block. Got %slot 1 of {_p}%"

    set {_skill2} to skill_give({_p}, "MAGE", "TEST")
    set {_slotSkill1} to player_store_skill_slot({_p}, {_skill1})
    set {_slotSkill2} to player_store_skill_slot({_p}, {_skill2})
    
    assert if {_slotSkill1} is 0 with message "skill1 should be given in slot 0. Got %{_slotSkill1}%"
    assert if {_slotSkill2} is 1 with message "skill2 should be given in slot 1. Got %{_slotSkill2}%"
    assert if slot 2 of {_p} is stone with message "slot 2 of player should be stone block. Got %slot 2 of {_p}%"

  it "test skill reload":
    clear inventory of {_p}
    player_store_skill_delete_all({_p})
    set {_skill} to skill_give({_p}, "MAGE", "TEST")
    set {_slot} to player_store_skill_slot({_p}, {_skill})
    player_store_stat_set({_p}, "POWER", 100)

    set {_power} to item_nbt_get_stat({_skill}, "POWER")
    set {_playerPower} to player_store_stat_get({_p}, "POWER")
    set {_powerMultiplier} to item_nbt_get_stat({_skill}, "POWER_MULTIPLIER")
    set {_finalPower} to {_power} + {_playerPower} * {_powerMultiplier}
    assert if line 3 of lore of slot {_slot} of {_p} contains "%{_finalPower}%" with message "lore should contain a final power of %{_finalPower}%. Got %line 3 of lore of slot {_slot} of {_p}%"

  it "test get all skills":
    clear inventory of {_p}
    player_store_skill_delete_all({_p})
    skill_give({_p}, "MAGE", "TEST")
    skill_give({_p}, "MAGE", "TEST")
    skill_give({_p}, "MAGE", "TEST")
    delete {_skill::*}
    set {_skill::*} to player_store_skills({_p})
    assert if size of {_skill::*} is 3 with message "player_store_skills should return 3 skills. Got %size of {_skill::*}%"