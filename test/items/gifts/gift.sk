function test_item_gift(p: player):
  send "ยง5Testing items gift" to the console 
  it "Test item gift consecrate intellect":
    set {_weapon} to item_create({_p}, "WEAPON", "STAFF", "LIMB_OF_WISDOM")
    set {_rangeGift} to item_create({_p}, "GIFT", "INTELLECT", "RANGE")
    set {_giftIntellect::*} to item_nbt_get_list({_weapon}, "INTELLECT")
    assert if size of {_giftIntellect::*} is 0 with message "{_boostedWeapon} should have 0 intellect gift. Got %size of {_giftIntellect::*}%"
    
    set {_boostedWeapon} to gift_consecrate({_p}, {_rangeGift}, {_weapon})
    set {_range} to item_nbt_get_stat({_boostedWeapon}, "RANGE")
    set {_giftIntellect::*} to item_nbt_get_list({_boostedWeapon}, "INTELLECT")
    assert if {_range} is {WEAPON::STAFF::LIMB_OF_WISDOM::RANGE} + {GIFT::INTELLECT::RANGE::RANGE} with message "{_range} should be %{WEAPON::STAFF::LIMB_OF_WISDOM::RANGE} + {GIFT::INTELLECT::RANGE_1::RANGE}%. Got %{_range}%"
    assert if size of {_giftIntellect::*} is 1 with message "{_boostedWeapon} should have 1 intellect gift. Got %size of {_giftIntellect::*}%"

  it "Test item gift consecrate will":
    set {_weapon} to item_create({_p}, "WEAPON", "STAFF", "LIMB_OF_WISDOM")
    set {_burningHeartGift} to item_create({_p}, "GIFT", "WILL", "BURNING_HEART")
    set {_giftWill::*} to item_nbt_get_list({_weapon}, "WILL")
    assert if size of {_giftWill::*} is 0 with message "{_boostedWeapon} should have 0 will gift. Got %size of {_giftWill::*}%"
    
    set {_boostedWeapon} to gift_consecrate({_p}, {_burningHeartGift}, {_weapon})
    set {_giftWill::*} to item_nbt_get_list({_boostedWeapon}, "WILL")
    assert if size of {_giftWill::*} is 1 with message "{_boostedWeapon} should have 1 will gift. Got %size of {_giftWill::*}%"
    assert if {_boostedWeapon} is not {_weapon} with message "item should change. Previous: %{_weapon}%. After: %{_boostedWeapon}%"